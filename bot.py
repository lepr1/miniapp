import json
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, ReplyKeyboardMarkup, KeyboardButton, WebAppInfo
from aiogram.filters import Command
import keyboards as kb
from config import WEBAPP_URL

router = Router()

# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è WebApp
main_kb = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text="üöÄ –û—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç", web_app=WebAppInfo(url=WEBAPP_URL))]],
    resize_keyboard=True
)

# /start
@router.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å WebApp –∏ –∑–∞–∫–∞–∑–∞—Ç—å —à–º–æ—Ç–∫–∏:",
        reply_markup=main_kb
    )

# –æ–±—Ä–∞–±–æ—Ç–∫–∞ web_app_data
@router.message()
async def handle_webapp(message: Message):
    if message.web_app_data:
        raw = message.web_app_data.data
        try:
            payload = json.loads(raw)
            username = payload.get("username", "‚Äî")
            size = payload.get("size", "‚Äî")
            item = payload.get("item", "‚Äî")
            count = payload.get("count", "‚Äî")
            delivery = payload.get("delivery", "‚Äî")
            metro = payload.get("metro", "‚Äî")

            metro_text = "‚Äî" if delivery == "pickup" else metro

            text = (
                "<b>–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –∏–∑ WebApp</b>\n\n"
                f"Username: {username}\n"
                f"–†–∞–∑–º–µ—Ä: {size}\n"
                f"–¢–æ–≤–∞—Ä: {item}\n"
                f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {count}\n"
                f"–î–æ—Å—Ç–∞–≤–∫–∞: {delivery}\n"
                f"–ú–µ—Ç—Ä–æ: {metro_text}\n\n"
                f"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞ –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ (–æ—Ç–º–µ–Ω–∏—Ç–µ) –∑–∞–∫–∞–∑ üîΩ"


            )
            await message.answer(text, reply_markup=kb.confirm_order,parse_mode="HTML")

        except Exception:
            await message.answer(f"–î–∞–Ω–Ω—ã–µ —Å WebApp: {raw}")

@router.callback_query(F.data == "confirm_order")
async def confirm_order(callback: CallbackQuery):
    await callback.bot.send_message(chat_id="", text=callback.message.text)
    await callback.message.edit_text(callback.message.text + "\n\n‚úÖ –ó–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω", reply_markup=None)

# –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑
@router.callback_query(F.data == "cancel_order")
async def cancel_order(callback: CallbackQuery):
    await callback.message.delete()
